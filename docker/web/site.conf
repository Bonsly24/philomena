# choose required log level, see https://www.keycdn.com/support/nginx-error-log
error_log /proc/self/fd/1 info;
# disable access log for GDPR / CCPA compliance
# access_log /dev/null;
access_log /proc/self/fd/1;

server {
	listen 8080 default;
	listen [::]:8080;

	# use external resolver to get dynamic DNS -> IP resolving without nginx reload / restart
	resolver_timeout 1s;
	# resolver kube-dns.kube-system.svc.cluster.local valid=30s;
	
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff; 
	add_header X-XSS-Protection "1; mode=block"; 
	
	# Input all your trusted domains for content inclusion, including your cdn and other required trusted sources:
	add_header Content-Security-Policy "default-src 'none'; script-src 'self'; img-src 'self' *.example.com data:; style-src 'self'; style-src-elem 'self'; object-src 'self'; connect-src 'self'; font-src 'self'; media-src 'self' *.example.com; data:";
	
	# enable for proper TLS:
	# server_name your.cert.domain.tld;
	# listen 443 ssl;
	# listen [::]:443 ssl;
	# ssl_certificate /etc/nginx/ssl/your.cert.domain.tld.crt;
	# ssl_certificate_key /etc/nginx/ssl/your.cert.domain.tld.key;
	# ssl_session_cache shared:SSL:10m;
	# ssl_session_timeout 10m;
	# ssl_session_tickets off;
	# ssl_ecdh_curve secp384r1;
	# ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	# ssl_prefer_server_ciphers on;
	# # generate this pem using `sudo mkdir -p /etc/nginx/ssl` and then `sudo openssl dhparam -out /etc/nginx/ssl/dhp-4096.pem 4096`:
	# ssl_dhparam /etc/nginx/ssl/dhp-4096.pem;
	# add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;
	
	root /srv/assets/static;

	client_max_body_size       100M;
	client_body_buffer_size    128k;

	location ~ ^/img/view/(.+)/([0-9]+).*\.([A-Za-z0-9]+)$ {
		expires max;
		add_header      Cache-Control public;
		alias "/system/images/thumbs/$1/$2/full.$3";
	}

	location ~ ^/img/download/(.+)/([0-9]+).*\.([A-Za-z0-9]+)$ {
		add_header Content-Disposition "attachment";
		expires max;
		add_header      Cache-Control public;
		alias "/system/images/thumbs/$1/$2/full.$3";
	}

	location ~ ^/img/(.+)   {
		expires max;
		add_header Cache-Control public;
		alias /system/images/thumbs/$1;
	}

	location ~ ^/spns/(.+)   {
		expires max;
		add_header Cache-Control public;
		alias /system/images/adverts/$1;
	}

	location ~ ^/avatars/(.+)   {
		expires max;
		add_header Cache-Control public;
		alias /system/images/avatars/$1;
	}

	location ~ ^/media/(.+)   {
		expires max;
		add_header Cache-Control public;
		alias /system/images/$1;
	}

	location /healthz {
		access_log /dev/null;
		return 204;
	}

	location / {
		try_files $uri @proxy;
	}

	location @proxy {
		proxy_pass         http://app:4000;
		proxy_redirect     off;

		proxy_set_header   Host             $host:$server_port;
		proxy_set_header   X-Real-IP        $remote_addr;
		proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

		proxy_connect_timeout      90;
		proxy_send_timeout         90;
		proxy_read_timeout         90;

		proxy_buffer_size          4k;
		proxy_buffers              4 32k;
		proxy_busy_buffers_size    64k;
		proxy_temp_file_write_size 64k;

		# Configuration for Phoenix WS
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}
}
